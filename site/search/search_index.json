{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Chrome%20Extension%20Challenge/","title":"TechX: Chrome Extension Challenge","text":""},{"location":"Chrome%20Extension%20Challenge/#description","title":"Description","text":"<p>TechX: Chrome Extension Challenge is a competition organized by GDSC BPDC, Dubai, that aims to foster innovation and creativity among college students. The competition welcomes participants from all backgrounds, including non-coders, while offering exciting challenges for coders to showcase their skills. </p>"},{"location":"Chrome%20Extension%20Challenge/#format","title":"Format","text":"<ol> <li> <p>Problem Statement: Participants are presented with a set of real-world problems or challenges related to various industries or domains. (similar to GDSC Solution Challenge but this time we will limit the problem) Say, we can limit the problem statement to environmental sustainability. </p> </li> <li> <p>Theorizing an idea: The concept is to use Google BARD instead of chatgpt or explore Chrome extensions, or something else all together, to enhance their solutions.</p> </li> <li> <p>Solution Development: Participants develop their solutions, keeping in mind the target audience, user experience, and impact. Non-coders can focus on designing prototypes, while coders can implement functional prototypes.</p> </li> </ol>"},{"location":"Chrome%20Extension%20Challenge/#example-solution","title":"Example Solution","text":"<p>A problem could be how to ensure child safety when browsing the net.</p> <p>A possible solution could be: A chrome extension which has the following features -</p> <ol> <li> <p>Content Filtering and Parental Controls: through blacklist/whitelist or web scraping</p> </li> <li> <p>Real-time Monitoring and Alerts: using Google Safe Browsing API for alerts</p> </li> <li> <p>Social Media Safety: could prompt feed settings</p> </li> <li> <p>Screen Time: Similar to parental controls, possible use of push notification services, such as Firebase Cloud Messaging</p> </li> </ol>"},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/","title":"Tech talk: Keeping you up to date \ud83d\udc69\u200d\ud83d\udcbb\ud83d\udc68\u200d\ud83d\udcbb","text":""},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/#a-recurring-workshop","title":"A RECURRING WORKSHOP","text":"<p>We have seen a lot of workshops covering the usual hot topics - Data Science, Machine Learning, Deep Learning, Full Stack Dev. Albeit these are important courses to have workshops, I feel like there are many new developements out there, that many aren't even aware about.</p> <p>\ud83e\udd14 When was the last time you heard about a workshop which talks about latest libraries or technologies which you can adopt and change how you work?</p> <p>I propose to introduce this concept to GDSC. Let's breakdown how I wish this to go about.</p>"},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/#possible-topics","title":"Possible topics","text":"<p>As the title says, we will introduce new technologies, AI based applications, Python libraries to the participants. Let me give some examples:</p> <ul> <li>AI tools: ControlNet for AI art generation, GitHub CoPilot, chatpdf, contents AI tool, Bard v/s ChatGPT </li> <li>Python libraries: Polars, Streamsync, Foilum</li> <li>Talks: Is AI ethical, Benefits of web scraping</li> </ul> <p>and so much more!</p>"},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/#how-to-decide-the-topic","title":"How to decide the topic","text":"<p> We could have a schedule. Or even hold a poll on Instagram (or even Threads! sad twitter noises), this way our social media handles can get more attention.</p>"},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/#hosting-the-workshop","title":"Hosting the workshop","text":"<p>The duration of the workshop will be relatively short compared to regular ones - say an hour at most. It will be a presentation and hands-on format. We could rotate the host through the tech team.</p>"},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/#do-i-have-experience-doing-this","title":"Do I have experience doing this?","text":"<p>Glad you asked, I do! I got the opportunity to do a presentation at Emirates in front of the RO heads and staff. I introduced Polars library to my line manager, and he was happy to see a possible replacement of Pandas. Here's the link to my presentation: Introducing Polars.pdf - Google Drive. I even had a live demostration showing the difference in syntax and speed. I even had a opportunity to have a discussion about GitHub. For this, I encouraged my peers to join me and we demostrated the many benefits of collaborating on the platform.</p>"},{"location":"Tech%20talk%3A%20Keeping%20you%20up%20to%20date/#an-example-workshop","title":"An example workshop","text":"<p>comparision in speed and difference in syntax</p> <p>Using a 5.8 million rows and 31 columns : Flights.csv standard to compare speeds</p> <pre><code># %%\n#LIBRARY IMPORTS\nimport polars as pl\nimport pandas as pd\n\n# %%\n#PANDAS\ndf_pandas = pd.read_csv(\"flights.csv\")\n\n# %%\n#POLARS\ndf_polars = pl.read_csv('flights.csv')\n\n# %% [markdown]\n# ### FILTERING DATA\n\n# %%\n#PANDAS\ndf_pandas = pd.read_csv(\"flights.csv\")\ndf_pandas = df_pandas[(df_pandas['MONTH'] == 12) &amp;\n        (df_pandas['ORIGIN_AIRPORT'] == 'SEA') &amp;\n        (df_pandas['DESTINATION_AIRPORT'] == 'DFW')]\n\nprint(df_pandas)\n\n# %%\n#POLARS EAGER EXECUTION\ndf = pl.read_csv('flights.csv').filter(\n     (pl.col('MONTH') == 12) &amp;\n     (pl.col('ORIGIN_AIRPORT') == 'SEA') &amp;\n     (pl.col('DESTINATION_AIRPORT') == 'DFW'))\ndisplay(df)\n\n# %%\n# LAZY EXECUTION (SCAN_CSV)\ndf = pl.scan_csv('flights.csv').filter(\n        (pl.col('MONTH') == 12) &amp;\n        (pl.col('ORIGIN_AIRPORT') == 'SEA') &amp;\n        (pl.col('DESTINATION_AIRPORT') == 'DFW')).collect()\ndisplay(df)\n# %%\nimport pandas as pd\nimport polars as pl\n\n# %%\n# Pandas DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie'],\n        'Age': [25, 30, 35],\n        'Pet':['Cat','Fish','Dog'],\n        'Car':['Toyota','Lexus','Nissan']}\ndf = pd.DataFrame(data)\nprint(df)\n\n# %%\n# Polars DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie'],\n        'Age': [25, 30, 35],\n        'Pet':['Cat','Fish','Dog'],\n        'Car':['Toyota','Lexus','Nissan']}\ndf_pl = pl.DataFrame(data)\nprint(df_pl)\n\n# %%\n# Pandas\ndf[['Name', 'Car']]\n\n# %%\n# The above code will run with Polars as well,\n# but the correct way in Polars is:\ndf_pl.select(pl.col(['Name', 'Car']))\n\n# %%\n# Pandas\ndf.query('Age &gt; 25')\n\n# %%\n# Polars\ndf_pl.filter(pl.col('Age') &gt; 25)\n\n# %%\n# Pandas\ndf[\"Age_mul_10\"] = df[\"Age\"] * 10\n\ndf\n\n# %%\n# Polars\ndf_pl.with_columns([(pl.col(\"Age\") * 10).alias(\"Age_mul_10\")])\n\n# Polars for multiple columns\n# df.with_columns([(pl.col(\"col\") * 10).alias(\"new_col\"), ...])\n\n# %%\n# Pandas\ndf.groupby('Name')['Age'].agg('mean')\n\n# %%\n# Polars\n# df.groupby('col1').agg([pl.col('col2').mean()]) # As suggested in Polars docs\ndf_pl.groupby('Name').agg([pl.mean('Age')]) # Shorter\n</code></pre>"}]}